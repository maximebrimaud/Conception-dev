package models;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.sql.DataSource;

@Entity
@Table
public class User
{
	
	@Id
	@SequenceGenerator(name="UserId", sequenceName="UserIdSequence", allocationSize=1)
	@GeneratedValue(strategy=GenerationType.SEQUENCE, generator ="UserId")

	@Resource private DataSource myDataSource;
	
	@Column(name="id_user")
	private int id;
	@Column
	private String firstName;
	@Column
	private String lastName;
	@Column
	private String username;
	@Column
	private String password;
	@Column
	private String email;
	@Column
	private String dob;
	@Column
	private String sexe;
	@Column
	private String address;
	@Column
	private String image;
	@Column
	private String modificationDate;
	@Column
	private String creationDate;
	
	private List<Friend> friendsInCommon= new ArrayList<Friend>();
	
	//********* Constructor
	public User() {
		super();
	}
		
	public User(int id, String firstName, String lastName, String username, String password, String email, String dob,
			String sexe, String address, String image, String modificationDate, String creationDate) throws SQLException {
		super();
		this.id = id;
		this.firstName = firstName;
		this.lastName = lastName;
		this.username = username;
		this.password = password;
		this.email = email;
		this.dob = dob;
		this.sexe = sexe;
		this.address = address;
		this.image = image;
		this.modificationDate = modificationDate;
		this.creationDate = creationDate;
	}
	
	public User(int id, String firstName, String lastName, String username, String password, String email, String dob,
			String sexe, String address, String image, String modificationDate, String creationDate,List<Friend> friendsInComm) throws SQLException {
		super();
		this.id = id;
		this.firstName = firstName;
		this.lastName = lastName;
		this.username = username;
		this.password = password;
		this.email = email;
		this.dob = dob;
		this.sexe = sexe;
		this.address = address;
		this.image = image;
		this.modificationDate = modificationDate;
		this.creationDate = creationDate;
		this.friendsInCommon = friendsInComm;
	}
	
	//********* Getters and Setters
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getFirstName() {
		return firstName;
	}
	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}
	public String getLastName() {
		return lastName;
	}
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}
	public String getUsername() {
		return username;
	}
	public void setUsername(String username) {
		this.username = username;
	}
	public String getPassword() {
		return password;
	}
	public void setPassword(String password) {
		this.password = password;
	}
	public String getCreationDate() {
		return creationDate;
	}
	public void setCreationDate(String creationDate) {
		this.creationDate = creationDate;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}

	public String getDob() {
		return dob;
	}

	public void setDob(String dob) {
		this.dob = dob;
	}

	public String getSexe() {
		return sexe;
	}

	public void setSexe(String sexe) {
		this.sexe = sexe;
	}

	public String getAddress() {
		return address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	public String getImage() {
		return image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	public String getModificationDate() {
		return modificationDate;
	}

	public void setModificationDate(String modificationDate) {
		this.modificationDate = modificationDate;
	}
	
	public List<Friend> getFriendsInCommon() {
		return friendsInCommon;
	}
	public void setFriendsInCommon(List<Friend> friendsInCommon) {
		this.friendsInCommon = friendsInCommon;
	}
	
	public void setFriendsInCommon(int idUser) throws SQLException {

		System.out.println("about to start the search search for friends in common");
		
		Connection myConnection = myDataSource.getConnection("APP","APP");	
		PreparedStatement statementFriends = 
				myConnection.prepareStatement("SELECT u.ID_USER, u.NOM_USER, u.PRENOM_USER, u.EMAIL_USER, u.DATE_OF_BIRTH, u.SEXE, u.USERNAME, u.PASSWORD_USER, u.ADDRESS_USER, u.IMAGE_USER, u.USER_CREATION_DATE, u.USER_MODIFICATION_DATE FROM FRIENDS f inner join USERS u on f.ID_USER_TWO = u.ID_USER WHERE f.ID_USER_ONE = " + idUser
											+ "UNION"
											+ "SELECT u1.ID_USER, u1.NOM_USER, u1.PRENOM_USER, u1.EMAIL_USER, u1.DATE_OF_BIRTH, u1.SEXE, u1.USERNAME, u1.PASSWORD_USER, u1.ADDRESS_USER, u1.IMAGE_USER, u1.USER_CREATION_DATE, u1.USER_MODIFICATION_DATE  FROM FRIENDS f1 inner join USERS u1 on f1.ID_USER_ONE = u1.ID_USER WHERE f1.ID_USER_TWO = " + idUser);
		ResultSet newFriendsResult = statementFriends.executeQuery();
		List<Friend> friendsInCommon = new ArrayList<Friend>();
		


		System.out.println("during the search search for friends in common");
		
		while(newFriendsResult.next())
		{
			Friend friendd = new Friend();
			//Getting all the rows
			int idFriend = newFriendsResult.getInt("ID_USER");
			String nom = newFriendsResult.getString("NOM_USER");
			String prenom = newFriendsResult.getString("PRENOM_USER");
			String sexee = newFriendsResult.getString("SEXE");
			String usernamee = newFriendsResult.getString("USERNAME");
			String passwordd = newFriendsResult.getString("PASSWORD_USER");
			String emaill =  newFriendsResult.getString("EMAIL_USER");
			String Bday =  newFriendsResult.getString("DATE_OF_BIRTH");
			String creationDatee =  newFriendsResult.getString("USER_CREATION_DATE");
			String modificationDatee =  newFriendsResult.getString("USER_MODIFICATION_DATE");
			String addresss =  newFriendsResult.getString("ADDRESS_USER");
			String imagee =  newFriendsResult.getString("IMAGE_USER");
			
			friendd.setId(idFriend);
			friendd.setFullName(prenom + " " + nom);
			friendd.setfriendsCommonNumber(10);
			//friendd.setListFriendsCommon();
			User currentUser = new User(id,prenom,nom,usernamee,passwordd,emaill,Bday, sexee, addresss, imagee, modificationDatee, creationDatee);
			friendd.setUserr(currentUser);
			
			friendsInCommon.add(friendd);	
		}
		setFriendsInCommon(friendsInCommon);
	}
}